steps:
  - name: node
    entrypoint: yarn
    args: ["install"]
    dir: frontend
    id: install
  - name: node
    entrypoint: yarn
    args: ["run", "create-env"]
    dir: frontend
    id: create-env
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}",
        "-f",
        "./frontend/Dockerfile",
        ".",
      ]
    id: build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"
    id: Push
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    args:
      - run
      - services
      - update
      - ${_SERVICE_NAME}
      - "--platform=managed"
      - "--image=${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"
      - "--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=${COMMIT_SHA},gcb-build-id=${BUILD_ID},gcb-trigger-id=${_TRIGGER_ID}"
      - "--region=${_DEPLOY_REGION}"
      - "--quiet"
    id: Deploy
    entrypoint: gcloud
options:
  env:
    - "NEXT_PUBLIC_ENV=${_NEXT_PUBLIC_ENV}"
    - "NEXT_PUBLIC_BACKEND_URL=${_NEXT_PUBLIC_BACKEND_URL}"
    - "NEXT_PUBLIC_SUPABASE_URL=${_NEXT_PUBLIC_SUPABASE_URL}"
    - "NEXT_PUBLIC_SUPABASE_ANON_KEY=${_NEXT_PUBLIC_SUPABASE_ANON_KEY}"
    - "NEXT_PUBLIC_JUNE_API_KEY=${_NEXT_PUBLIC_JUNE_API_KEY}"
images:
  [
    "${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}",
  ]
substitutions:
  _PLATFORM: managed
  _SERVICE_NAME: quivr-frontend
  _DEPLOY_REGION: europe-west3
  _AR_HOSTNAME: europe-west3-docker.pkg.dev
  _TRIGGER_ID: 5b501942-5df8-4ac5-b369-fe370736cb64
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - quivr-frontend
